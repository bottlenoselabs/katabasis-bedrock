name: "Main"

on:
  push:
    branches:
      - main
    tags: 
      - v*
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:    
      - main
    paths-ignore:
      - '**.md'

jobs:

  build-native-libraries-job:
    name: "Build native libraries ${{ matrix.platform.rid }}"
    needs: [version-job]
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { name: Windows (x64), os: ubuntu-latest, rid: win-x64 }
        - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
        - { name: macOS (x64+arm64), os: macos-latest, rid: osx }
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        submodules: 'recursive'

    - name: "Build native libraries (Windows)"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      shell: bash
      run: sudo apt-get update -y && sudo apt-get install -y mingw-w64 && ./library.sh

    - name: "Build native libraries (Unix)"
      if: ${{ !(startsWith(matrix.platform.rid, 'win')) }}
      shell: bash
      run: ./library.sh

    - name: "Upload native libraries"
      uses: actions/upload-artifact@v2
      with:
        name: "native-libraries-${{ matrix.platform.rid }}"
        path: './lib'

  dotnet-job:
    name: ".NET"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows x64,           os: windows-latest, shell: bash }
        # Using Ubuntu 18.04 because of GitHub Actions Runner bug: https://github.com/actions/runner/issues/1819#issuecomment-1098641309
        - { name: Linux x64,             os: ubuntu-18.04,   shell: bash }
        - { name: macOS x64,             os: macos-latest,   shell: bash }
    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: ".NET"
      uses: bottlenoselabs/github-actions-dotnet@v3
      with:
        dotnet-sdk-version: "6.0.x"
        solution-or-project: "${{ github.workspace }}/Katabasis.Bedrock.sln"
    
    - name: "NuGet packages (MyGet): Katabasis.Bedrock"
      shell: bash
      if: ${{ matrix.platform.os == 'ubuntu-18.04' && ( github.event_name == 'push' || startsWith(github.ref, 'refs/tags/v') ) }}
      run: dotnet nuget push "./**/*Katabasis.Bedrock.nupkg" --source https://www.myget.org/F/bottlenoselabs/api/v3/index.json --skip-duplicate --api-key ${{ secrets.MYGET_ACCESS_TOKEN }}

    - name: "NuGet packages (NuGet): Katabasis.Bedrock"
      shell: bash
      if: "${{ matrix.platform.os == 'ubuntu-18.04' && startsWith(github.ref, 'refs/tags/v') }}"
      run: dotnet nuget push "./**/*Katabasis.Bedrock.nupkg" --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{ secrets.NUGET_ACCESS_TOKEN }}

    - name: "NuGet packages (MyGet): Katabasis.Bedrock.*"
      shell: bash
      if: ${{ github.event_name == 'push' || startsWith(github.ref, 'refs/tags/v') }}
      run: dotnet nuget push "./**/*Katabasis.Bedrock.*.nupkg" --source https://www.myget.org/F/bottlenoselabs/api/v3/index.json --skip-duplicate --api-key ${{ secrets.MYGET_ACCESS_TOKEN }}

    - name: "NuGet packages (NuGet): Katabasis.Bedrock.*"
      shell: bash
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: dotnet nuget push "./**/*Katabasis.Bedrock.*.nupkg" --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{ secrets.NUGET_ACCESS_TOKEN }}