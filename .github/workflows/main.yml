name: "Main"

on:
  push:
    branches:
      - main
    tags: 
      - v*
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:    
      - main
    paths-ignore:
      - '**.md'

jobs:

  build-native-libraries-job:
    name: "Build native libraries ${{ matrix.platform.rid }}"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { name: Windows (x64), os: windows-latest, rid: win-x64 }
        - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
        - { name: macOS (x64+arm64), os: macos-latest, rid: osx }
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        submodules: 'recursive'

    - name: "Build native libraries (Windows)"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      shell: bash
      run: ./library.sh

    - name: "Build native libraries (Unix)"
      if: ${{ !(startsWith(matrix.platform.rid, 'win')) }}
      shell: bash
      run: ./library.sh

    - name: "Upload native libraries"
      uses: actions/upload-artifact@v2
      with:
        name: "native-libraries-${{ matrix.platform.rid }}"
        path: './lib/${{ matrix.platform.rid }}'

  dotnet-job:
    name: ".NET"
    needs: [build-native-libraries-job]
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows x64, os: windows-latest, shell: bash, rid: win-x64 }
        - { name: macOS (x64+arm64), os: macos-latest, shell: bash, rid: osx }
        # Using Ubuntu 18.04 because of GitHub Actions Runner bug: https://github.com/actions/runner/issues/1819#issuecomment-1098641309
        - { name: Linux x64, os: ubuntu-18.04, shell: bash, rid: linux-x64 }
    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: 0
        
    - name: "Download native libraries"
      uses: actions/download-artifact@v1
      with:
        name: "native-libraries-${{ matrix.platform.rid }}"
        path: './lib/${{ matrix.platform.rid }}'

    - name: "Install .NET"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: "Build + pack .NET solution"
      shell: bash
      run:
        VERSION="$(date +%Y.%-m).$(git rev-list --count ${GITHUB_REF##*/})"
        dotnet build --nologo --verbosity minimal --configuration Release -p:Version=$VERSION
        if [ "${{ matrix.platform.os }}" == "ubuntu-18.04" ]; then
          dotnet pack ./src/cs/production/Katabasis.Bedrock/Katabasis.Bedrock.csproj --nologo --verbosity minimal --configuration Release --no-build -p:PackageVersion=$VERSION
        fi
        dotnet pack ./src/cs/production/Katabasis.Bedrock.${{ matrix.platform.rid }}/Katabasis.Bedrock.${{ matrix.platform.rid }}.csproj --nologo --verbosity minimal --configuration Release --no-build -p:PackageVersion=$VERSION
    
    - name: "Upload NuGet packages (MyGet)"
      shell: bash
      if: ${{ matrix.platform.os == 'ubuntu-18.04' && ( github.event_name == 'push' || startsWith(github.ref, 'refs/tags/v') ) }}
      run: dotnet nuget push "./**/*.nupkg" --source https://www.myget.org/F/bottlenoselabs/api/v3/index.json --skip-duplicate --api-key ${{ secrets.MYGET_ACCESS_TOKEN }}

    - name: "Upload NuGet packages (NuGet)"
      shell: bash
      if: "${{ matrix.platform.os == 'ubuntu-18.04' && startsWith(github.ref, 'refs/tags/v') }}"
      run: dotnet nuget push "./**/*.nupkg" --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{ secrets.NUGET_ACCESS_TOKEN }}
